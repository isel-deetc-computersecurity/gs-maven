name: Java CI Workflow

# The events that trigger the workflow.
on:
  workflow_dispatch
  #push:
  #  branches:
  #    - main  # Run when code is pushed to the main branch.
  #pull_request:
  #  branches:
  #    - main  # Run when a pull request is opened against the main branch.
  
jobs:
  # This job compiles, tests, and builds the Java project.
  build-and-test:
    runs-on: ubuntu-latest  # The virtual machine type to run the job.

    steps:
      # Step 1: Check out the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'  # Use AdoptOpenJDK
          java-version: '17'  # Specifies the version of Java to use.

      # Step 3: Build the project using Maven (could use Gradle if preferred).
      - name: Build with Maven
        run: mvn clean install

      # Step 4: Run tests.
      - name: Run tests with Maven
        run: mvn test

  # Optional: A separate deploy job (to demonstrate job dependencies).
  deploy:
    runs-on: ubuntu-latest
    
    needs: build-and-test  # This job will run only after the `build-and-test` job completes successfully.
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Example deployment step: Simulating a deploy by echoing a message.
      - name: Deploy to environment
        run: echo "Deploying Java application..."

      # Conditional deployment to production.
      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: echo "Deploying to Production environment..."
